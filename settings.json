// Place your settings in this file to overwrite the default settings
{
  "window.menuBarVisibility": "toggle",
  "workbench.colorTheme": "Omni",
  "workbench.editor.labelFormat": "short",
  "workbench.editor.showTabs": true,
  "workbench.iconTheme": "material-icon-theme",
  "workbench.startupEditor": "welcomePage",
  // "workbench.colorCustomizations": {
  //   "editor.foldBackground": "#1f2c36",
  //   "tab.activeBackground": "#0E7490",
  //   "tab.activeForeground": "#FFFFFF",
  //   // "tab.activeBackground": "#5284be"
  //   // "editor.lineHighlightBackground": "#38393A",
  //   // "editorGutter.background": "#2A2A2B"
  // },
  "breadcrumbs.enabled": true,
  "window.titleSeparator": " — ",
  "explorer.compactFolders": false,
  "explorer.confirmDragAndDrop": false,
  "editor.autoClosingQuotes": "always",
  "editor.fontFamily": "JetBrains Mono, Dank Mono, Fira Code, Inconsolata, Menlo, Monaco, 'Courier New', monospace",
  "editor.fontLigatures": true,
  "editor.fontSize": 18,
  "editor.lineHeight": 26,
  "editor.fontWeight": "400",
  "editor.formatOnType": true,
  "editor.suggest.showStatusBar": true,
  "editor.wordWrap": "wordWrapColumn",
  "editor.wrappingIndent": "indent",
  "editor.wordWrapColumn": 100,
  "editor.rulers": [
    100,
    120
  ],
  "editor.renderLineHighlight": "gutter",
  "editor.minimap.enabled": true,
  "editor.dragAndDrop": true,
  "editor.codeLens": true,
  "editor.autoIndent": "brackets",
  "editor.tabSize": 2,
  "editor.renderControlCharacters": false,
  "editor.tabCompletion": "on",
  "editor.semanticHighlighting.enabled": true,
  "editor.quickSuggestions": {
    "strings": true
  },
  "editor.foldingStrategy": "indentation",
  "editor.suggest.insertMode": "replace",
  "editor.suggest.snippetsPreventQuickSuggestions": true,
  "editor.suggestSelection": "recentlyUsedByPrefix",
  "css.validate": false,
  "scss.validate": false,
  "css.completion.completePropertyWithSemicolon": true,
  "scss.completion.completePropertyWithSemicolon": true,
  "editor.tokenColorCustomizations": {
    "textMateRules": [
      {
        "scope": [
          //following will be in italic (=FlottFlott)
          "comment",
          "entity.name.type.class", //class names
          "keyword", //import, export, return…
          "constant", //String, Number, Boolean…, this, super
          "storage.modifier", //static keyword
          "storage.type.class.js", //class keyword
          "entity.other.inherited-class",
          "entity.other.attribute-name",
          "punctuation.definition.comment",
          "entity.type.namespace"
          // "entity.name.tag", // html tags.
        ],
        "settings": {
          "fontStyle": "italic"
        }
      },
      {
        "scope": [
          //following will be excluded from italics (VSCode has some defaults for italics)
          "invalid",
          "keyword.operator",
          "constant.numeric.css",
          "keyword.other.unit.px.css",
          "constant.numeric.decimal.js",
          "constant.numeric.json"
        ],
        "settings": {
          "fontStyle": ""
        }
      }
    ]
  },
  "editor.formatOnSave": true,
  // "editor.codeActionsOnSave": {
  //   "source.fixAll.eslint": true
  // },
  "[javascript]": {
    "editor.formatOnSave": false,
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": true
    }
  },
  "[javascriptreact]": {
    "editor.formatOnSave": false,
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": true
    }
  },
  "[typescript]": {
    "editor.formatOnSave": false,
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": true
    }
  },
  "[typescriptreact]": {
    "editor.formatOnSave": false,
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": true
    }
  },
  "[vue]": {
    "editor.formatOnSave": false,
    "editor.codeActionsOnSave": {
      "source.fixAll.eslint": true
    }
  },
  "[json]": {
    "editor.formatOnSave": false,
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.formatOnSave": false,
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[html]": {
    "editor.quickSuggestions": {
      "other": true,
      "comments": false,
      "strings": true
    },
    "editor.defaultFormatter": "vscode.html-language-features"
    // "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "emmet.showAbbreviationSuggestions": true,
  "emmet.showSuggestionsAsSnippets": true,
  "emmet.triggerExpansionOnTab": true,
  "emmet.syntaxProfiles": {
    "javascript": "jsx"
  },
  "emmet.includeLanguages": {
    "javascript": "javascriptreact",
    "typescript": "typescriptreact",
    "vue-html": "html",
    "js": "html",
    "ts": "html",
    "edge": "html",
    "jsp": "html",
    "erb": "html",
    "slim": "html",
    "haml": "html"
  },
  "eslint.alwaysShowStatus": true,
  "colorize.enable_search_variables": false,
  "colorize.languages": [
    "javascript",
    "typescript",
    "javascriptreact",
    "typescriptreact",
    "json",
    "html",
    "css",
    "sass",
    "scss",
    "less",
    "postcss",
    "stylus",
    "xml",
    "svg"
  ],
  "tailwindCSS.lint.cssConflict": "ignore",
  "tailwindCSS.experimental.classRegex": [
    // "tw`([^`]*)", // tw`...`
    // "tw=\"([^\"]*)", // <div tw="..." />
    // "tw={\"([^\"}]*)", // <div tw={"..."} />
    // "tw\\.\\w+`([^`]*)", // tw.xxx`...`
    // "tw\\(.*?\\)`([^`]*)", // tw(Component)`...`
    // ["cx\\(([^)]*)\\)", "'([^']*)'"],
    // ["cx\\(([^)]*)\\)", "'([^`]*)'"],
    // "(?:classnames|classNames|fill|push|unshift|cx|cn|tw)\\(([^)]*)\\)"
    // "(?:\"|'|`)([^(?:\"|'|`)]*)(?:\"|'|`)",
    // "(?:\"|'|`)([^(?:\"|'|`)]*)",

    "(?:\"|'|`)([^(?:\"|'|`)]*)",
    "(?:cx|cn|tw)\\(([^)]*)\\)",
    "(?:classnames|classNames|style|fill|push|unshift|add|remove|toggle)\\(([^)]*)\\)",
  ],
  "tailwindCSS.includeLanguages": {
    "plaintext": "html",
    "html": "html",
    "javascript": "javascript",
    "typescript": "javascript",
    "typescriptreact": "javascript"
  },
  "tailwindCSS.emmetCompletions": true,
  "todo-tree.tree.expanded": false,
  "bookmarks.navigateThroughAllFiles": false,
  "files.insertFinalNewline": true,
  "files.exclude": {
    "**/.git": true,
    "**/.git/objects/**": true,
    "**/.git/subtree-cache/**": true,
    "**/.svn": true,
    "**/.hg": true,
    "**/.DS_Store": true,
    "**/.directory": true,
    // "**/node_modules/*/**": true,
    "**/*.js": {
      "when": "$(basename).ts"
    },
    "**/*.js.map": {
      "when": "$(basename)"
    },
    "**/*.g.dart": true,
    "**/.classpath": true,
    "**/.project": true,
    "**/.settings": true,
    "**/.factorypath": true
  },
  "files.watcherExclude": {
    "**/.git/objects/**": true,
    "**/.git/subtree-cache/**": true,
    "**/node_modules/*/**": true
  },
  "files.associations": {
    ".sequelizerc": "javascript",
    ".stylelintrc": "json",
    ".prettierrc": "json",
    "*.haml": "haml",
    "*.erb": "erb"
    //   "*.js": "javascriptreact"
  },
  "html.suggest.html5": true,
  "terminal.integrated.fontFamily": "JetBrains Mono, Fira Code, Inconsolata, Menlo, Monaco, 'Courier New', monospace",
  "terminal.integrated.fontSize": 16,
  "terminal.integrated.fontWeightBold": "500",
  // "terminal.external.osxExec": "iTerm.app",
  "terminal.integrated.rendererType": "dom",
  "terminal.integrated.cursorStyle": "underline",
  "terminal.integrated.cursorBlinking": true,
  "terminal.integrated.copyOnSelection": true,
  // "terminal.integrated.shell.linux": "/usr/bin/bash",
  // "terminal.integrated.shell.osx": "/usr/bin/bash",
  //"terminal.integrated.shellArgs.windows": ["-ExecutionPolicy", "Bypass"],
  "terminal.integrated.profiles.windows": {
    "PowerShell": { "source": "PowerShell", "icon": "terminal-powershell" },
    "Command Prompt": {
      "path": [
        "${env:windir}\\Sysnative\\cmd.exe",
        "${env:windir}\\System32\\cmd.exe"
      ],
      "icon": "terminal-cmd"
    },
    "GitBash": {
      "path": ["C:\\Program files\\Git\\bin\\bash.exe"],
      "icon": "terminal-bash"
    },
  },
  "terminal.integrated.defaultProfile.windows": "GitBash",
  "javascript.updateImportsOnFileMove.enabled": "never",
  "javascript.preferences.quoteStyle": "single",
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": true,
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": true,
  "javascript.preferences.importModuleSpecifier": "non-relative",
  "javascript.suggest.autoImports": true,
  "typescript.updateImportsOnFileMove.enabled": "never",
  "typescript.preferences.quoteStyle": "single",
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": true,
  "typescript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": true,
  "typescript.preferences.importModuleSpecifier": "non-relative",
  "typescript.suggest.autoImports": true,
  "typescript.tsserver.log": "off",
  "extensions.autoUpdate": true,
  "extensions.ignoreRecommendations": false,
  "gitlens.codeLens.recentChange.enabled": false,
  "gitlens.codeLens.authors.enabled": false,
  "gitlens.codeLens.enabled": false,
  "search.smartCase": true,
  "material-icon-theme.activeIconPack": "react_redux",
  "material-icon-theme.folders.associations": {
    "infra": "app",
    "entities": "class",
    "domain": "class",
    "schemas": "class",
    "typeorm": "database",
    "repositories": "mappings",
    "http": "container",
    "migrations": "tools",
    "modules": "components",
    "implementations": "core",
    "dtos": "typescript",
    "fakes": "mock",
    "websockets": "pipe",
    "protos": "pipe",
    "grpc": "pipe",
    "providers": "include",
    "subscribers": "messages",
    "useCases": "controller",
    "kafka": "scripts",
    "mappers": "meta",
    "_shared": "shared",
    "contexts": "content",
    "hoc": "container",
    "options": "log",
    "presentation": "class",
    "forms": "template",
    "eslint-config": "tools"
  },
  "material-icon-theme.files.associations": {
    "ormconfig.json": "database",
    "tsconfig.json": "tune",
    "*.proto": "3d"
  },
  "sync.gist": "053454f8f67d2e379c1e3fd52f609f53",
  "sync.autoDownload": false,
  "sync.autoUpload": false,
  "sync.forceDownload": false,
  "sync.askGistName": false,
  "sync.removeExtensions": true,
  "sync.syncExtensions": true,
  "sync.quietSync": false,
  "sync.forceUpload": true,
  "path-intellisense.autoSlashAfterDirectory": true,
  "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
  "todohighlight.include": [
    "**/*.js",
    "**/*.jsx",
    "**/*.ts",
    "**/*.tsx",
    "**/*.html",
    "**/*.xhtml",
    "**/*.jsp",
    "**/*.php",
    "**/*.rb",
    "**/*.css",
    "**/*.scss"
  ],
  "todohighlight.exclude": [
    "**/node_modules/**",
    "**/bower_components/**",
    "**/dist/**",
    "**/build/**",
    "**/.vscode/**",
    "**/.github/**",
    "**/_output/**",
    "**/*.min.*",
    "**/*.map",
    "**/.next/**"
  ],
  "liveServer.settings.donotShowInfoMsg": true,
  // "ruby.rubocop.executePath": "/usr/local/var/rbenv/shims/",
  "incrementor.enums.values": [
    [
      "on",
      "off"
    ],
    [
      "and",
      "or"
    ],
    [
      "yes",
      "no"
    ],
    [
      "true",
      "false"
    ],
    [
      "TRUE",
      "FALSE"
    ],
    [
      "enable",
      "disable"
    ],
    [
      "enabled",
      "disabled"
    ],
    [
      "positive",
      "negative"
    ],
    [
      "active",
      "disabled"
    ],
    [
      "activate",
      "deactivate"
    ],
    [
      "add",
      "remove"
    ],
    [
      "show",
      "hide"
    ],
    [
      "available",
      "unavailable"
    ],
    [
      "high",
      "low"
    ],
    [
      "min",
      "max"
    ],
    [
      "in",
      "out"
    ],
    [
      "inner",
      "outer"
    ],
    [
      "first",
      "last"
    ],
    [
      "start",
      "stop"
    ],
    [
      "absolute",
      "relative",
      "fixed"
    ],
    [
      "horizontal",
      "vertical"
    ],
    [
      "left",
      "right",
      "center",
      "justify"
    ],
    [
      "top",
      "bottom"
    ],
    [
      "up",
      "down"
    ],
    [
      "height",
      "width"
    ],
    [
      "row",
      "column"
    ],
    [
      "lighten",
      "darken"
    ],
    [
      "margin",
      "padding"
    ],
    [
      "px",
      "rem",
      "vh",
      "vw"
    ],
    [
      "flex",
      "block",
      "inline",
      "inline-block",
      "inline-flex",
      "grid",
      "table",
      "none"
    ],
    [
      "flex-start",
      "flex-end",
      "center",
      "space-around",
      "space-between",
      "space-evenly"
    ],
    [
      "justify-content",
      "align-items"
    ],
    [
      "margin-bottom",
      "margin-top"
    ],
    [
      "margin-left",
      "margin-right"
    ],
    [
      "padding-bottom",
      "padding-top"
    ],
    [
      "padding-left",
      "padding-right"
    ],
    [
      "background",
      "color"
    ],
    [
      "mixin",
      "include",
      "extend"
    ],
    [
      "before",
      "after"
    ],
    [
      "if",
      "unless"
    ],
    [
      "while",
      "until"
    ],
    [
      "filter",
      "action"
    ],
    [
      "request",
      "response"
    ],
    [
      "get",
      "post",
      "put",
      "patch",
      "delete"
    ],
    [
      "index",
      "show",
      "new",
      "create",
      "store",
      "edit",
      "update",
      "destroy"
    ],
    [
      "en",
      "en-US"
    ],
    [
      "development",
      "staging",
      "production",
      "test"
    ],
    [
      "h1",
      "h2",
      "h3",
      "h4",
      "h5",
      "h6"
    ],
    [
      "const",
      "let",
      "var"
    ],
    [
      "ctrl",
      "cmd",
      "meta"
    ],
    [
      "import",
      "export"
    ],
    [
      "public",
      "private"
    ],
    [
      "class",
      "interface",
      "type"
    ],
    [
      "string",
      "number",
      "boolean",
      "object",
      "any",
      "Date",
      "void"
    ],
    [
      "join",
      "split"
    ],
    [
      "parse",
      "stringify"
    ],
    [
      "pop",
      "push"
    ],
    [
      "shift",
      "unshift"
    ],
    [
      "View",
      "Text",
      "Image",
      "TouchableOpacity",
      "ReactButton"
    ],
    [
      "am",
      "pm"
    ],
    [
      "ac",
      "ap",
      "df",
      "mg"
    ],
    [
      "day",
      "week",
      "month",
      "year"
    ],
    [
      "latitude",
      "longitude"
    ],
    [
      "mini",
      "tiny",
      "small",
      "medium",
      "large",
      "big",
      "huge",
      "massive"
    ],
    [
      "black",
      "yellow",
      "green",
      "blue",
      "orange",
      "purple",
      "pink",
      "red",
      "teal",
      "olive",
      "violet",
      "grey",
      "brown"
    ],
    [
      "one",
      "two",
      "three",
      "four",
      "five",
      "six",
      "seven",
      "eight",
      "nine",
      "ten",
      "eleven",
      "twelve",
      "thirteen",
      "fourteen",
      "fifteen",
      "sixteen"
    ],
    [
      "dark",
      "default",
      "primary",
      "secondary",
      "success",
      "info",
      "warning",
      "error"
    ],
    [
      "flash",
      "shake",
      "pulse",
      "tada",
      "bounce"
    ],
    [
      "boxapp-shadow",
      "default-shadow",
      "mac-shadow",
      "full-shadow",
      "raised-shadow",
      "lifted-shadow",
      "lifted-left-shadow",
      "lifted-right-shadow",
      "curved-shadow",
      "curled-shadow",
      "horizontal-shadow",
      "vertical-shadow"
    ],
    [
      "text",
      "hidden",
      "password",
      "search",
      "number",
      "email",
      "url",
      "checkbox",
      "radio",
      "file",
      "image",
      "tel",
      "button",
      "submit",
      "reset",
      "range",
      "date",
      "time",
      "datetime-local",
      "week",
      "month",
      "color"
    ],
    [
      "STRING",
      "TEXT",
      "INTEGER",
      "BIGINT",
      "FLOAT",
      "DECIMAL",
      "DATE",
      "DATEONLY",
      "TIME",
      "BOOLEAN",
      "VIRTUAL",
      "ENUM",
      "ARRAY",
      "JSON",
      "JSONB",
      "BLOB",
      "UUID"
    ],
    [
      "long",
      "Long"
    ],
    [
      "all",
      "symmetric"
    ],
    [
      "normal",
      "bold",
      "w100",
      "w200",
      "w300",
      "w400",
      "w500",
      "w600",
      "w700",
      "w800",
      "w900"
    ],
    [
      "shade50",
      "shade100",
      "shade200",
      "shade300",
      "shade400",
      "shade500",
      "shade600",
      "shade700",
      "shade800",
      "shade900"
    ],
    [
      "fill",
      "contain",
      "cover",
      "fitWidth",
      "fitHeight",
      "scaleDown"
    ]
  ],
  "diffEditor.ignoreTrimWhitespace": false,
  "todo-tree.tree.showScanModeButton": false,
  "importCost.timeout": 200000,
  "vscodeGoogleTranslate.preferredLanguage": "English",
  "markdown-preview-enhanced.automaticallyShowPreviewOfMarkdownBeingEdited": false,
  "compareFolders.excludeFilter": [
    "**/node_modules",
    "**/dist",
    "**/build",
    "**/target",
    "**/.svn",
    "**/.git"
  ],
  "statusbar_command.commands": [
    {
      "text": "🔂",
      "tooltip": "Restart TS Server",
      "alignment": "right",
      "command": "typescript.restartTsServer"
    },
    {
      "text": "🔄",
      "tooltip": "Reload Window",
      "alignment": "right",
      "command": "workbench.action.reloadWindow"
    },
    {
      "text": "🖥",
      "tooltip": "Clear Terminal",
      "alignment": "right",
      "command": "workbench.action.terminal.clear"
    },
    {
      "text": "🚀",
      "tooltip": "Run Debug",
      "alignment": "right",
      "command": "workbench.action.debug.start"
    },
    {
      "text": "✔︎",
      "tooltip": "Jest Start",
      "alignment": "left",
      "command": "io.orta.jest.start"
    },
    {
      "text": "✘",
      "tooltip": "Jest Stop",
      "alignment": "left",
      "command": "io.orta.jest.stop"
    },
    {
      "text": "⌽",
      "tooltip": "Jest Coverage Toggle",
      "alignment": "left",
      "command": "io.orta.jest.coverage.toggle"
    }
  ],
  "openSpecFile.suffixMap": {
    ".js": ".spec.js",
    ".ts": ".spec.ts",
    ".spec.js": ".js",
    ".spec.ts": ".ts",
    ".html": ".css"
  },
  "openSpecFile.openInNewColumn": false,
  "surround.custom": {
    "setTimeout": {
      "label": "setTimeout",
      "description": "setTimeout(() => {}, ms)",
      "snippet": "setTimeout(() => {\n\t$TM_SELECTED_TEXT$0\n}, 3000);"
    },
    "returnPromise": {
      "label": "returnNewPromise",
      "description": "return new Promise((resolve, reject))",
      "snippet": "return new Promise((resolve, reject) => {\n\t$TM_SELECTED_TEXT$0\n});"
    },
    "resolve": {
      "label": "resolve",
      "description": "resolve()",
      "snippet": "resolve($TM_SELECTED_TEXT)$0"
    },
    "reject": {
      "label": "reject",
      "description": "reject()",
      "snippet": "reject($TM_SELECTED_TEXT)$0"
    },
    "JSON.stringify": {
      "label": "JSON.stringify",
      "description": "JSON.stringify",
      "snippet": "JSON.stringify($TM_SELECTED_TEXT)$0"
    },
    "JSON.parse": {
      "label": "JSON.parse",
      "description": "JSON.parse",
      "snippet": "JSON.parse($TM_SELECTED_TEXT)$0"
    },
    "JSON.print": {
      "label": "JSON.print",
      "description": "JSON.print",
      "snippet": "<pre>{ JSON.stringify($TM_SELECTED_TEXT, null, 2) }</pre>$0"
    },
    "Template Object": {
      "label": "Template Object",
      "description": "Template Object",
      "snippet": "${ $TM_SELECTED_TEXT }$0"
    },
    "Wrap with div": {
      "label": "Wrap with div",
      "description": "Wrap with div",
      "snippet": "<div>\n\t$TM_SELECTED_TEXT\n</div>$0"
    },
    "Wrap with strong": {
      "label": "Wrap with strong",
      "description": "Wrap with strong",
      "snippet": "<strong>$TM_SELECTED_TEXT</strong>$0"
    },
    "Wrap with span": {
      "label": "Wrap with span",
      "description": "Wrap with span",
      "snippet": "<span>$TM_SELECTED_TEXT</span>$0"
    },
    "Wrap with p": {
      "label": "HTML Tag p",
      "description": "HTML Tag p",
      "snippet": "<p>$TM_SELECTED_TEXT</p>$0"
    },
    "Conditional Render": {
      "label": "Conditional Render",
      "description": "Conditional Render",
      "snippet": "{ ${1:condition} && (\n\t$TM_SELECTED_TEXT\n) }$0"
    },
    "TernaryConditional Render": {
      "label": "TernaryConditional Render",
      "description": "TernaryConditional Render",
      "snippet": "{ ${1:condition}\n\t? ($TM_SELECTED_TEXT)\n\t: (${2:ElseElement}) }$0"
    },
    "Ternary Operator": {
      "label": "Ternary Operator",
      "description": "Ternary Operator",
      "snippet": "${1:condition} ? $TM_SELECTED_TEXT : ${2:ElseElement}$0"
    },
    "Java: System.out.println()": {
      "label": "Java: System.out.println()",
      "description": "Java: System.out.println()",
      "snippet": "System.out.println($TM_SELECTED_TEXT);$0"
    },
    "Java: String.format()": {
      "label": "Java: String.format()",
      "description": "Java: String.format()",
      "snippet": "String.format($TM_SELECTED_TEXT, ${1:args})"
    },
    "React Fragment": {
      "label": "React Fragment",
      "description": "<.>...</>",
      "snippet": "<>\n\t$TM_SELECTED_TEXT\n</>$0",
    },
    "Wrap with tw()": {
      "label": "Wrap with tw()",
      "description": "{tw('relative mt-4')}",
      "snippet": "{tw($TM_SELECTED_TEXT)}$0"
    },
    "Wrap with cn()": {
      "label": "Wrap with cn()",
      "description": "{cn('relative mt-4')}",
      "snippet": "{cn($TM_SELECTED_TEXT)}$0"
    },
    "Wrap with useEffect()": {
      "label": "Wrap with useEffect()",
      "description": "useEffect(() => {}, [])",
      "snippet": "useEffect(() => {\n\t$TM_SELECTED_TEXT\n}, []);$0"
    },
    "Wrap with String()": {
      "label": "Wrap with String()",
      "description": "String()",
      "snippet": "String($TM_SELECTED_TEXT)$0"
    },
    "Wrap with Number()": {
      "label": "Wrap with Number()",
      "description": "Number()",
      "snippet": "Number($TM_SELECTED_TEXT)$0"
    },
    "Wrap with [...array]": {
      "label": "Wrap with [...array]",
      "description": "[...array]",
      "snippet": "[...$TM_SELECTED_TEXT]$0"
    },
    "Wrap with {...object}": {
      "label": "Wrap with {...object}",
      "description": "{...object}",
      "snippet": "{...$TM_SELECTED_TEXT}$0"
    },
  },
  // "javascript.suggest.completeFunctionCalls": true,
  // "typescript.suggest.completeFunctionCalls": true,
  "cSpell.enableFiletypes": [
    "!c",
    "!cpp",
    "!csharp",
    "css",
    "dotenv",
    "git-commit",
    "handlebars",
    "jsx-tags",
    "scss",
    "sql"
  ],
  "cSpell.language": "en,en-US",
  "[xml]": {
    "editor.defaultFormatter": "redhat.vscode-xml"
  },
  "xml.format.enabled": false,
  "trailing-spaces.trimOnSave": true,
  "commentbars.quickPresets": [
    {
      "label": "Hashed",
      "fillChar": "#",
      "width": 80,
      "thickness": 1
    },
    {
      "label": "Equal",
      "fillChar": "=",
      "width": 80,
      "thickness": 1
    },
    {
      "label": "Tilda",
      "fillChar": "~",
      "width": 80,
      "thickness": 1
    },
    {
      "label": "Dash",
      "fillChar": "-",
      "width": 80,
      "thickness": 1
    },
    {
      "label": "Doted",
      "fillChar": ".",
      "width": 80,
      "thickness": 1
    }
  ],
  "commentbars.commentDelimsUser": {
    "javascript": {
      "start": "/* ",
      "end": " */"
    },
    "javascriptreact": {
      "start": "// ",
      "end": " //"
    },
    "html": {
      "start": "<!-- ",
      "end": " -->"
    },
    "markdown": {
      "start": "<!-- ",
      "end": " -->"
    },
    "scss": {
      "start": "/* ",
      "end": " */"
    },
    "typescript": {
      "start": "/* ",
      "end": " */"
    },
    "typescriptreact": {
      "start": "/* ",
      "end": " */"
    },
    "xml": {
      "start": "<!-- ",
      "end": " -->"
    }
  },
  "splitHTMLAttributes.closingBracketOnNewLine": true,
  "cSpell.enabledLanguageIds": [
    "c",
    "cpp",
    "csharp",
    "go",
    "html",
    "javascript",
    "javascriptreact",
    "json",
    "latex",
    "markdown",
    "php",
    "plaintext",
    "python",
    "ruby",
    "text",
    "typescript",
    "typescriptreact",
    "yml"
  ],
  "cSpell.userWords": [
    "Decorables",
    "Dropdown",
    "Injectable",
    "Validators",
    "browserslist",
    "cpfcnpj",
    "rocketseat",
    "wifi"
  ],
  "cSpell.ignoreWords": [
    "Dropup",
    "Hmmss",
    "Iniciando",
    "Jogo",
    "Lato",
    "Myyyy",
    "Reactotron",
    "Roboto",
    "Subviews",
    "Tamanho",
    "Toastify",
    "Uncomment",
    "animationend",
    "arial",
    "bonification",
    "bonifications",
    "cancancan",
    "datepicker",
    "datetime",
    "datetimepicker",
    "deduping",
    "descricao",
    "grecaptcha",
    "helvetica",
    "hljs",
    "hookform",
    "iphone",
    "kunukn",
    "maskedinput",
    "middlewares",
    "oracledb",
    "parameterize",
    "params",
    "preloading",
    "respawn",
    "rspec",
    "scrollbar",
    "searchtecnologia",
    "serializer",
    "smtp",
    "subdomain",
    "swal",
    "timestamps",
    "tsnd",
    "typeorm",
    "undelete",
    "unform",
    "unprocessable",
    "uuidv",
    "youch"
  ],
  "eslint.packageManager": "yarn",
  "simple.readme.settings.github": "shaikatmajumdar",
  "simple.readme.settings.name": "Shaikat Majumdar",
  "simple.readme.settings.lang": "en-US",
  "react-native.packager.port": 19001,
  "template-string-converter.enabled": true,
  "template-string-converter.quoteType": "both",
  "template-string-converter.validLanguages": [
    "typescript",
    "javascript",
    "typescriptreact",
    "javascriptreact"
  ],
  "faker.locale": "en_US",
  // Java Settings
  //"java.home": "C:\\Program Files\\Eclipse Adoptium\\jdk-17.0.3.7-hotspot",
  "java.home": "C:\\Progra~1\\Eclips~1\\jdk-17.0.3.7-hotspot",
  "java.jdt.ls.vmargs": "-XX:+UseParallelGC -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xmx1G -Xms100m -javaagent:\"C:\\Users\\sm277\\.vscode\\extensions\\vscjava.vscode-lombok-1.0.1\\server\\lombok.jar\"",
  "java.configuration.runtimes": [
    {
      "name": "JavaSE-17",
      //"path": "C:\\Program Files\\Eclipse Adoptium\\jdk-17.0.3.7-hotspot"
      "path": "C:\\Progra~1\\Eclips~1\\jdk-17.0.3.7-hotspot"
    }
  ],
  "java.help.firstView": "gettingStarted",
  "java.semanticHighlighting.enabled": true,
  "java.refactor.renameFromFileExplorer": "preview",
  "java.server.launchMode": "Standard",
  "java.configuration.updateBuildConfiguration": "automatic",
  "java.errors.incompleteClasspath.severity": "ignore",
  "tabnine.experimentalAutoImports": true,
  "java.autobuild.enabled": true,
  "java.showBuildStatusOnStart.enabled": true,
  "java.debug.settings.hotCodeReplace": "auto",
  // Maven Settings
  "maven.executable.options": "-P$MAVEN_PROFILE",
  "redhat.telemetry.enabled": false,
  "[java]": {
    // "files.encoding": "windows1252",
    "editor.tabSize": 4,
    "editor.formatOnSave": false,
    "editor.wordWrapColumn": 120,
    "editor.rulers": [
      120
    ]
  },
  "[jsp]": {
    // "files.encoding": "windows1252",
    "editor.wordWrap": "off",
    "editor.tabSize": 4,
    "editor.formatOnSave": false
  },
  "[xhtml]": {
    // "files.encoding": "windows1252",
    "editor.wordWrap": "off",
    "editor.tabSize": 4,
    "editor.formatOnSave": false
  },

  // Causes the debug view to automatically appear when a breakpoint is hit. This
  // setting is global and not configurable per-language.
  "debug.openDebug": "openOnDebugBreak",

  // Dart Settings.
  "dart.previewFlutterUiGuides": true,
  "dart.previewFlutterUiGuidesCustomTracking": true,
  "dart_data_class_generator.useEquatable": true,
  "dart.flutterCreateAndroidLanguage": "java",
  "dart.flutterCreateOrganization": "com.shaikatmajumdar",
  "[dart]": {
    "editor.codeActionsOnSave": {
      "source.organizeImports": true,
      "source.fixAll": true
    },
    "editor.formatOnSave": true,
    "editor.formatOnType": true,
    "editor.rulers": [
      80
    ],
    "editor.selectionHighlight": false,
    "editor.suggest.snippetsPreventQuickSuggestions": false,
    "editor.suggestSelection": "first",
    "editor.tabCompletion": "onlySnippets",
    "editor.wordBasedSuggestions": false
  },
  "security.workspace.trust.untrustedFiles": "open",
  "back-n-forth.iconStyle": "chevron",
  "editor.guides.indentation": true,
  "java.jdt.ls.vmargs": "-XX:+UseParallelGC -XX:GCTimeRatio=4 -XX:AdaptiveSizePolicyWeight=90 -Dsun.zip.disableMemoryMapping=true -Xmx1G -Xms100m -javaagent:\"c:\\Users\\sm277\\.vscode\\extensions\\vscjava.vscode-lombok-1.0.1\\server\\lombok.jar\""
}
